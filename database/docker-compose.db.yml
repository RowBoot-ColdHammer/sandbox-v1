volumes:
  pg_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/pgdata

  mongo_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/mongo

  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/redis

services:
  pgdb:
    image: postgres:15.4-alpine3.18
    environment:
      POSTGRES_DB: ${STORE_PG_DB}
      POSTGRES_USER: ${STORE_PG_DB_USER}
      POSTGRES_PASSWORD: ${STORE_PG_DB_PASSWORD}
    ports:
      - "${STORE_PG_DB_EXTERNAL_PORT}:${STORE_PG_DB_PORT}"
    volumes:
      - ./dump:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:6-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${STORE_MDB_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${STORE_MDB_DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${STORE_MDB_DB}
    ports:
      - "${STORE_MDB_DB_EXTERNAL_PORT}:${STORE_MDB_DB_PORT}"
    volumes:
      - mongo_data:/data/db
  
  redisdb:
    image: redis:7.4-alpine
    restart: always
    environment:
      REDIS_DB: ${REDIS_DB}
      REDIS_USER: ${REDIS_DB_USER}    # Пользователь (если используется)
      REDIS_PASS: ${REDIS_DB_PASSWORD} 
      # REDIS_HOST: ${REDIS_HOST}    # Хост (хотя в контейнере обычно localhost)
    ports:
      - "${REDIS_DB_EXTERNAL_PORT}:${REDIS_DB_PORT}"
    # command: >
    #   sh -c "redis-server --requirepass ${REDIS_DB_PASSWORD}"
    volumes:
      - redis_data:/data